{"name": "test_login[testuser-testpass-400]", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://dummyjson.com/user/login", "trace": "self = <test_cases.test_login.TestLogin object at 0x103887110>\nusername = 'testuser', password = 'testpass', expected_status_code = 400\n\n    @pytest.mark.parametrize(\"username,password,expected_status_code\", [\n        (\"emilys\", \"emilyspass\", 200),\n        (\"testuser\", \"testpass\", 400),\n        (\"anotheruser\", \"anotherpass\", 400)\n    ])\n    def test_login(self, username, password, expected_status_code):\n        # 1. 准备动作，实例化一个Auth对象\n        login = Auth()\n    \n        # 2. 调用被测方法，获取响应结果（只把 username 和 password 传给了 login 方法）\n>       response = login.login(username, password)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntest_cases/test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napis/auth_api.py:10: in login\n    response = client.post(\"/user/login\", {\"username\":username, \"password\":password})\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbase/api_client.py:63: in post\n    return self._request(\"POST\", endpoint, json=data, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbase/api_client.py:48: in _request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://dummyjson.com/user/login\n\n.venv/lib/python3.13/site-packages/requests/models.py:1026: HTTPError"}, "attachments": [{"name": "log", "source": "26a15484-5342-4749-828a-1ef1c7fb5c1e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "132ee6dc-0070-4ab7-b633-3c49da297c3e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'testuser'"}, {"name": "password", "value": "'testpass'"}, {"name": "expected_status_code", "value": "400"}], "start": 1756827658583, "stop": 1756827659692, "uuid": "a03d3386-9e84-4e30-b2ea-357a4fecda6b", "historyId": "748f4c8bee32a73dd41d2170564b386c", "testCaseId": "c1469246359ab4f6b8f59bb9203392dc", "fullName": "test_cases.test_login.TestLogin#test_login", "labels": [{"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "MacBookPro"}, {"name": "thread", "value": "49058-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_login"}], "titlePath": ["test_cases", "test_login.py", "TestLogin"]}